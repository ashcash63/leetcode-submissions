# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def middleNode(self, head: Optional[ListNode]) -> Optional[ListNode]:
        #brute force: 2 passes one to calculate length other to get to middle index
        #optimized: fast and slow pointers fast moves double speed than slpw so that by the end slow points to the middle node
        fast = head
        slow = head
        while(fast and fast.next):
            slow = slow.next
            fast = fast.next.next
        return slow

#O(n) and O(1)
